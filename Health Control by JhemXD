local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HealthRegenGui"
screenGui.Parent = PlayerGui

-- Create Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 300)
frame.Position = UDim2.new(0.5, -100, 0.5, -150)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.Parent = screenGui

-- Create Scrollable Frame
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, 0, 1, -50)
scrollFrame.Position = UDim2.new(0, 0, 0, 50)
scrollFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
scrollFrame.CanvasSize = UDim2.new(0, 180, 0, 600) -- Adjust CanvasSize based on content
scrollFrame.ScrollBarThickness = 10
scrollFrame.Parent = frame

-- Create Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(0, 180, 0, 50)
title.Position = UDim2.new(0.5, -90, 0, -40)
title.Text = "Health Control by JhemXD"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Parent = frame

-- Create Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 20, 0, 20)
minimizeButton.Position = UDim2.new(1, -25, 0, 5)
minimizeButton.Text = "-"
minimizeButton.Parent = frame

-- Create Instant Regen Button
local instantRegenButton = Instance.new("TextButton")
instantRegenButton.Size = UDim2.new(0, 180, 0, 50)
instantRegenButton.Position = UDim2.new(0.5, -90, 0.1, 10)
instantRegenButton.Text = "Instant Regen"
instantRegenButton.Parent = scrollFrame

-- Create Regen Button
local regenButton = Instance.new("TextButton")
regenButton.Size = UDim2.new(0, 180, 0, 50)
regenButton.Position = UDim2.new(0.5, -90, 0.3, 10)
regenButton.Text = "Regen"
regenButton.Parent = scrollFrame

-- Create Slider for Regen Rate
local slider = Instance.new("TextBox")
slider.Size = UDim2.new(0, 180, 0, 50)
slider.Position = UDim2.new(0.5, -90, 0.5, 10)
slider.Text = "Regen Rate: 0.1"
slider.Visible = false
slider.Parent = scrollFrame

-- Create Set Max Health Button and Input
local setMaxHealthInput = Instance.new("TextBox")
setMaxHealthInput.Size = UDim2.new(0, 180, 0, 30)
setMaxHealthInput.Position = UDim2.new(0.5, -90, 0.7, 10)
setMaxHealthInput.PlaceholderText = "Enter Max Health"
setMaxHealthInput.Parent = scrollFrame

local setMaxHealthButton = Instance.new("TextButton")
setMaxHealthButton.Size = UDim2.new(0, 180, 0, 30)
setMaxHealthButton.Position = UDim2.new(0.5, -90, 0.8, 10)
setMaxHealthButton.Text = "Set Max Health"
setMaxHealthButton.Parent = scrollFrame

-- Create Health Status Toggle and Display
local healthStatusToggle = Instance.new("TextButton")
healthStatusToggle.Size = UDim2.new(0, 180, 0, 30)
healthStatusToggle.Position = UDim2.new(0.5, -90, 0.9, 10)
healthStatusToggle.Text = "Show Health Status"
healthStatusToggle.Parent = scrollFrame

local healthStatusDisplay = Instance.new("TextLabel")
healthStatusDisplay.Size = UDim2.new(0, 180, 0, 30)
healthStatusDisplay.Position = UDim2.new(0.5, -90, 0, -100)
healthStatusDisplay.Text = "Health: 0/0"
healthStatusDisplay.TextColor3 = Color3.fromRGB(255, 255, 255)
healthStatusDisplay.BackgroundTransparency = 1
healthStatusDisplay.Visible = false
healthStatusDisplay.Parent = frame

-- Create Health Amount Input
local healthAmountInput = Instance.new("TextBox")
healthAmountInput.Size = UDim2.new(0, 180, 0, 30)
healthAmountInput.Position = UDim2.new(0.5, -90, 1.0, 10)
healthAmountInput.PlaceholderText = "Enter Health Amount"
healthAmountInput.Parent = scrollFrame

-- Create Player Name Input
local playerNameInput = Instance.new("TextBox")
playerNameInput.Size = UDim2.new(0, 180, 0, 30)
playerNameInput.Position = UDim2.new(0.5, -90, 1.2, 10)
playerNameInput.PlaceholderText = "Enter Player Name"
playerNameInput.Parent = scrollFrame

-- Create Heal Button
local healButton = Instance.new("TextButton")
healButton.Size = UDim2.new(0, 180, 0, 50)
healButton.Position = UDim2.new(0.5, -90, 1.4, 10)
healButton.Text = "Heal"
healButton.Parent = scrollFrame

-- Health Regeneration Script
local regenEnabled = false
local instantRegen = false
local regenRate = 0.1
local displayHealthStatus = false

local function toggleHealthRegen()
    regenEnabled = not regenEnabled
    if regenEnabled then
        regenButton.Text = "Regen: ON"
        slider.Visible = true
    else
        regenButton.Text = "Regen: OFF"
        slider.Visible = false
    end
end

local function instantRegenFunc()
    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.Health = humanoid.MaxHealth
        end
    end
end

local function setMaxHealth()
    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local maxHealth = tonumber(setMaxHealthInput.Text)
            if maxHealth then
                humanoid.MaxHealth = maxHealth
                humanoid.Health = maxHealth
            end
        end
    end
end

local function toggleHealthStatus()
    displayHealthStatus = not displayHealthStatus
    healthStatusDisplay.Visible = displayHealthStatus
    healthStatusToggle.Text = displayHealthStatus and "Hide Health Status" or "Show Health Status"
end

local function updateHealthStatus()
    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid and displayHealthStatus then
            healthStatusDisplay.Text = "Health: " .. math.floor(humanoid.Health) .. "/" .. humanoid.MaxHealth
        end
    end
end

local function healPlayer()
    local playerName = playerNameInput.Text
    local healthAmount = tonumber(healthAmountInput.Text)
    if playerName and healthAmount then
        local player = Players:FindFirstChild(playerName)
        if player and player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.Health = math.min(humanoid.Health + healthAmount, humanoid.MaxHealth)
            end
        end
    end
end

instantRegenButton.MouseButton1Click:Connect(instantRegenFunc)
regenButton.MouseButton1Click:Connect(toggleHealthRegen)
setMaxHealthButton.MouseButton1Click:Connect(setMaxHealth)
healthStatusToggle.MouseButton1Click:Connect(toggleHealthStatus)
healButton.MouseButton1Click:Connect(healPlayer)

RunService.Heartbeat:Connect(function()
    if regenEnabled then
        local character = LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.Health = math.min(humanoid.Health + regenRate, humanoid.MaxHealth)
            end
        end
    end
    updateHealthStatus()
end)

slider.FocusLost:Connect(function()
    local rate = tonumber(slider.Text:match("%d+%.?%d*"))
    if rate then
        regenRate = rate
        slider.Text = "Regen Rate: " .. tostring(rate)
    else
        slider.Text = "Regen Rate: " .. tostring(regenRate)
    end
end)

-- Make frame draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Make health status display draggable
healthStatusDisplay.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = healthStatusDisplay.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

healthStatusDisplay.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        healthStatusDisplay.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Minimize functionality
local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        frame:TweenSize(UDim2.new(0, 200, 0, 50), "Out", "Quad", 0.3, true)
        minimizeButton.Text = "+"
        for _, child in ipairs(frame:GetChildren()) do
            if child ~= minimizeButton then
                child.Visible = false
            end
        end
    else
        frame:TweenSize(UDim2.new(0, 200, 0, 300), "Out", "Quad", 0.3, true)
        minimizeButton.Text = "-"
        for _, child in ipairs(frame:GetChildren()) do
            child.Visible = true
        end
    end
end)
